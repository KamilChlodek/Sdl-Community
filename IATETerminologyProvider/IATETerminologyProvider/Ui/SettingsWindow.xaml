<Window x:Class="IATETerminologyProvider.Ui.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
		xmlns:viewModel="clr-namespace:IATETerminologyProvider.ViewModel"
		xmlns:resx="clr-namespace:IATETerminologyProvider"
		xmlns:uiHelpers ="clr-namespace:IATETerminologyProvider.UiHelpers"
		xmlns:helpers ="clr-namespace:IATETerminologyProvider.Helpers"
        d:DataContext="{d:DesignInstance viewModel:SettingsViewModel}"
		Icon="../Resources/IATE_settings.ico" WindowStyle="None" AllowsTransparency="True"
		Title="IATE Real-time Terminology"
		ResizeMode="CanResizeWithGrip"
		WindowStartupLocation="CenterScreen"
        Height="700" Width="800">
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/DataGridResources.xaml"/>
				<ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/TextBlockResources.xaml"/>
				<ResourceDictionary Source="/Sdl.Desktop.Platform.Styles;component/ButtonResources.xaml"/>
				<ResourceDictionary Source="../UiHelpers/WindowsBorder.xaml"/>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Window.Resources>
	<Border Style="{DynamicResource WindowControlBorderStyle}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<uiHelpers:WindowsControl  Grid.Row="0" Grid.ColumnSpan="2" DockPanel.Dock="Top"/>
			<TextBlock Grid.Row="1" Grid.Column="0" Margin="10" 
					   Style="{DynamicResource Sdl.TextBlock.TitleStyle}" Text="{x:Static resx:PluginResources.Settings_Descr}" FontSize="15" />

			<TextBlock Style="{StaticResource Sdl.TextBlock.SubtitleStyle}" Grid.Row="2" Grid.Column="0" Margin="10 5 0 0" Text="{x:Static resx:PluginResources.Domains_description}"/>
			<DataGrid Grid.Row="3" Margin="10,5,10,10" Grid.Column="0" AutoGenerateColumns="False" 
                  ItemsSource="{Binding Domains,UpdateSourceTrigger=PropertyChanged}"   
		          Style="{DynamicResource Sdl.DataGrid.GenericStyle}"
                  SelectionMode ="Extended"
                  SelectedValue="{Binding SelectedDomain,UpdateSourceTrigger=PropertyChanged}"
                  SelectionUnit="FullRow"
		          GridLinesVisibility="None"
				  AlternationCount="2"
				  IsReadOnly="True"
                  CanUserAddRows="False">
				<DataGrid.Columns>
					<DataGridTemplateColumn Width="50">
						<DataGridTemplateColumn.Header>
							<CheckBox 
								IsChecked="{Binding Path=DataContext.AllDomainsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},UpdateSourceTrigger=PropertyChanged}"
								Margin ="5,0,0,0"/>
						</DataGridTemplateColumn.Header>
						
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<CheckBox IsChecked="{Binding IsSelected,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin ="10,0,0,0" />
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTextColumn Header="{x:Static resx:PluginResources.Domains_header}" Width="2*" Binding="{Binding Name,UpdateSourceTrigger=PropertyChanged}">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="TextBlock">
								<Setter Property="VerticalAlignment" Value="Center" />
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
				</DataGrid.Columns>
			</DataGrid>

			<TextBlock Style="{StaticResource Sdl.TextBlock.SubtitleStyle}" Grid.Row="2" Margin="10,5,0,0" Grid.Column="1" Text="{x:Static resx:PluginResources.TermType_Description}"/>
			<DataGrid Grid.Row="3" Margin="10,5,10,10" Grid.Column="1" AutoGenerateColumns="False" 
                  ItemsSource="{Binding TermTypes,UpdateSourceTrigger=PropertyChanged}"
		          Style="{DynamicResource Sdl.DataGrid.GenericStyle}"
                  SelectionMode ="Extended"
                  SelectedValue="{Binding SelectedTermType,UpdateSourceTrigger=PropertyChanged}"
                  SelectionUnit="FullRow"
				  IsReadOnly="True"
                  CanUserAddRows="False" 
				  GridLinesVisibility="None">
				<DataGrid.Columns>
					<DataGridTemplateColumn Width="50">
						<DataGridTemplateColumn.Header>
							<CheckBox 
								IsChecked="{Binding Path=DataContext.AllTermTypesChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},UpdateSourceTrigger=PropertyChanged}"
								Margin ="5,0,0,0"/>
						</DataGridTemplateColumn.Header>
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<CheckBox IsChecked="{Binding IsSelected,UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Center" Margin ="10,0,0,0"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTextColumn Header="{x:Static resx:PluginResources.Terms_header}" Width="2*" Binding="{Binding Name,UpdateSourceTrigger=PropertyChanged}">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="TextBlock">
								<Setter Property="VerticalAlignment" Value="Center" />
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
				</DataGrid.Columns>
			</DataGrid>

			<Button Grid.Row="4" Grid.Column="0" HorizontalAlignment="Left" Margin="10" Cursor="Hand" Command="{Binding ResetToDefault}"
					Style="{DynamicResource Sdl.Button.SecondaryStyle}" MaxWidth="150" Content="Reset to default"/>
			<Border Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0,0.1,0,0" BorderBrush="#ABB0B3">
				<DockPanel>
					<Button  Style="{DynamicResource Sdl.Button.SecondaryStyle}" DockPanel.Dock="Right"
					         ToolTip="{x:Static resx:PluginResources.Reset_Tooltip}"
					         IsCancel="True"
					         Cursor="Hand"
					         Margin="10"
					         HorizontalAlignment="Right"
					         Content="Cancel">
					</Button>
					<Button  Style="{DynamicResource Sdl.Button.PrimaryStyle}" 
					         Cursor="Hand" IsDefault="True"
					         Margin="10" DockPanel.Dock="Right"
					         Command="{Binding SaveSettingsCommand}"
							 helpers:CloseOnClickBehaviour.IsEnabled="True"
					         HorizontalAlignment="Right"
					         Content="OK">
					</Button>
				</DockPanel>
			</Border>
			
		</Grid>
	</Border>
</Window>